name: Manual NPM Publish

concurrency: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
    inputs:
      distTag:
        description: 'NPM tag (e.g. use "next --canary" to release a test version, add "--force-publish" to release all packages)'
        required: true
        default: 'latest'

env:
  NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  NPM_CONFIG_PROVENANCE: true

jobs:
  authorize:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.2.0
        with:
          route: GET /orgs/:organisation/teams/:team/memberships/${{ github.actor }}
          team: technical-steering-committee
          organisation: webdriverio
        env:
          GITHUB_TOKEN: ${{ secrets.WDIO_BOT_GITHUB_TOKEN }}
  release:
    permissions:
      contents: write
      id-token: write
    needs: [authorize]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0

      - name: 🌲 Setup Git
        run: |
          git config --global user.email "bot@webdriver.io"
          git config --global user.name "WebdriverIO Release Bot"

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: 🔐 NPM Authentification
        run: |
          npm set registry "https://registry.npmjs.org/"
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm whoami

      - name: 🧩 Install Dependencies
        run: pnpm install

      - name: 🏗️ Build
        run: pnpm build

      # - name: Release
      #   run: |
      #     pnpm run setup
      #     pnpm run generate:typings
      #     npx lerna publish ${{github.event.inputs.releaseType}} --exact --yes --dist-tag ${{github.event.inputs.distTag}}
      #     pnpm run pushReleaseTag
      #   env:
      #     NODE_ENV: production
      #     GITHUB_AUTH: ${{ secrets.GITHUB_TOKEN }}
