<%- isUsingTypeScript ? "import { ChainablePromiseElement } from 'webdriverio';" : "" %>

<%- isUsingTypeScript || isUsingBabel
    ? "import Page from './page';"
    : "const Page = require('./page');" %>

/**
 * sub page containing specific selectors and methods for a specific page
 */
class LoginPage extends Page {
    /**
     * define selectors using getter methods
     */
    <%- isUsingTypeScript ? "public " : "" %>get inputUsername()<%- isUsingTypeScript ? ": ChainablePromiseElement<Promise<WebdriverIO.Element>>" : "" %> {
        return $('#username');
    }

    <%- isUsingTypeScript ? "public " : "" %>get inputPassword()<%- isUsingTypeScript ? ": ChainablePromiseElement<Promise<WebdriverIO.Element>>" : "" %> {
        return $('#password');
    }

    <%- isUsingTypeScript ? "public " : "" %>get btnSubmit()<%- isUsingTypeScript ? ": ChainablePromiseElement<Promise<WebdriverIO.Element>>" : "" %> {
        return $('button[type="submit"]');
    }

    /**
     * a method to encapsule automation code to interact with the page
     * e.g. to login using username and password
     */
    <%- isUsingTypeScript ? "public " : "" %>async login (username<%- isUsingTypeScript ? ": string": "" %>, password<%- isUsingTypeScript ? ": string": "" %>)<%- isUsingTypeScript ? ": Promise<void>" : "" %> {
        await this.inputUsername.setValue(username);
        await this.inputPassword.setValue(password);
        await this.btnSubmit.click();
    }

    /**
     * overwrite specific options to adapt it to page object
     */
    <%- isUsingTypeScript ? "public " : "" %>open()<%- isUsingTypeScript ? ": Promise<string>" : "" %> {
        return super.open('login');
    }
}

<%- isUsingTypeScript || isUsingBabel ? "export default": "module.exports =" %> new LoginPage();
