<%- isUsingTypeScript || isUsingBabel
    ? "import Page from './page';"
    : "const Page = require('./page');" %>

/**
 * sub page containing specific selectors and methods for a specific page
 */
class LoginPage extends Page {
    /**
     * define selectors using getter methods
     */
    get inputUsername () { return $('#username') }
    get inputPassword () { return $('#password') }
    get btnSubmit () { return $('button[type="submit"]') }

    /**
     * a method to encapsule automation code to interact with the page
     * e.g. to login using username and password
     */
    <%= _async %>login (username<%= isUsingTypeScript ? ": string": "" %>, password<%= isUsingTypeScript ? ": string": "" %>) {
        <% if (isSync) {
        %>this.inputUsername.setValue(username);
        this.inputPassword.setValue(password);
        this.btnSubmit.click(); <% } else {
        %>await (await this.inputUsername).setValue(username);
        await (await this.inputPassword).setValue(password);
        await (await this.btnSubmit).click();<% } %>
    }

    /**
     * overwrite specifc options to adapt it to page object
     */
    open () {
        return super.open('login');
    }
}

<%= isUsingTypeScript || isUsingBabel ? "export default": "module.exports =" %> new LoginPage();
