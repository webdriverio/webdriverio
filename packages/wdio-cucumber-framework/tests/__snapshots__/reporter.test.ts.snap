// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`cucumber reporter > emits messages for certain cucumber events > should proper data when executing a hook 1`] = `
[
  [
    "hook:end",
    {
      "argument": undefined,
      "cid": "0-1",
      "error": undefined,
      "featureName": "Example feature",
      "file": "/some/path/to/features/my-feature.feature",
      "parent": "0",
      "scenarioName": "Get size of an element",
      "specs": [
        "/foobar.js",
      ],
      "state": "PASSED",
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "",
      "type": "hook",
      "uid": "24",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > should send accepted pickle's data on \`test-case-started\` event 1`] = `
[
  [
    "suite:start",
    {
      "cid": "0-1",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "my-feature.feature:undefined:1: Get size of an element",
      "parent": "my-feature.feature:undefined:1",
      "rule": "rule name",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Get size of an element",
      "type": "scenario",
      "uid": "0",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > should send proper data on \`test-run-started\` event 1`] = `
[
  [
    "suite:start",
    {
      "cid": "0-1",
      "description": "  As a user of WebdriverIO
  I should be able to use different commands
  to get informations about elements on the page",
      "file": "/some/path/to/features/my-feature.feature",
      "keyword": "Feature",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "id": "9",
          "location": {
            "column": 1,
            "line": 1,
          },
          "name": "@feature-tag1",
        },
        {
          "id": "10",
          "location": {
            "column": 1,
            "line": 2,
          },
          "name": "@feature-tag2",
        },
      ],
      "title": "Example feature",
      "type": "feature",
      "uid": "my-feature.feature:undefined:1",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > should send proper data on onTestRunFinished 1`] = `
[
  [
    "suite:end",
    {
      "cid": "0-1",
      "duration": NaN,
      "file": "/some/path/to/features/my-feature.feature",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "id": "9",
          "location": {
            "column": 1,
            "line": 1,
          },
          "name": "@feature-tag1",
        },
        {
          "id": "10",
          "location": {
            "column": 1,
            "line": 2,
          },
          "name": "@feature-tag2",
        },
      ],
      "title": "Example feature",
      "type": "feature",
      "uid": "my-feature.feature:undefined:1",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > step finished events > failed step 1`] = `
[
  [
    "test:fail",
    {
      "argument": {
        "rows": [
          {
            "cells": [
              "Item",
              "Amount",
            ],
          },
          {
            "cells": [
              "Milk",
              "2",
            ],
          },
          {
            "cells": [
              "Butter",
              "1",
            ],
          },
        ],
      },
      "cid": "0-1",
      "error": [Error],
      "featureName": "Example feature",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "0: Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "parent": "0",
      "passed": false,
      "scenarioName": "Get size of an element",
      "specs": [
        "/foobar.js",
      ],
      "state": "fail",
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "type": "step",
      "uid": "12",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > step finished events > passed step 1`] = `
[
  [
    "test:pass",
    {
      "argument": {
        "rows": [
          {
            "cells": [
              "Item",
              "Amount",
            ],
          },
          {
            "cells": [
              "Milk",
              "2",
            ],
          },
          {
            "cells": [
              "Butter",
              "1",
            ],
          },
        ],
      },
      "cid": "0-1",
      "error": undefined,
      "featureName": "Example feature",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "0: Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "parent": "0",
      "passed": true,
      "scenarioName": "Get size of an element",
      "specs": [
        "/foobar.js",
      ],
      "state": "pass",
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "type": "step",
      "uid": "12",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events > step finished events > should send proper data on \`test-step-started\` event 1`] = `
[
  [
    "test:start",
    {
      "argument": {
        "rows": [
          {
            "cells": [
              "Item",
              "Amount",
            ],
          },
          {
            "cells": [
              "Milk",
              "2",
            ],
          },
          {
            "cells": [
              "Butter",
              "1",
            ],
          },
        ],
      },
      "cid": "0-1",
      "featureName": "Example feature",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "0: Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "parent": "0",
      "scenarioName": "Get size of an element",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Then should the element '.header-logged-out a' be 32px wide and 35px high",
      "type": "test",
      "uid": "12",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events when executed in scenarioLeverReporter > should send accepted pickle's data on \`test-case-started\` event 1`] = `
[
  [
    "test:start",
    {
      "cid": "0-1",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "my-feature.feature:undefined:1: Get size of an element",
      "parent": "my-feature.feature:undefined:1",
      "rule": "rule name",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Get size of an element",
      "type": "scenario",
      "uid": "0",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events when executed in scenarioLeverReporter > should send proper data on \`test-case-finished\` event 1`] = `
[
  [
    "test:pass",
    {
      "argument": undefined,
      "cid": "0-1",
      "error": undefined,
      "featureName": "Example feature",
      "file": "/some/path/to/features/my-feature.feature",
      "fullTitle": "0: Undefined Step",
      "parent": "0",
      "passed": true,
      "scenarioName": "Get size of an element",
      "specs": [
        "/foobar.js",
      ],
      "state": "pass",
      "tags": [
        {
          "astNodeId": "9",
          "name": "@feature-tag1",
        },
        {
          "astNodeId": "10",
          "name": "@feature-tag2",
        },
        {
          "astNodeId": "5",
          "name": "@skip(browserName='chrome';platformName='windows')",
        },
        {
          "astNodeId": "6",
          "name": "@scenario-tag1",
        },
        {
          "astNodeId": "7",
          "name": "@scenario-tag2",
        },
      ],
      "title": "Undefined Step",
      "type": "step",
      "uid": "0",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events when executed in scenarioLeverReporter > should send proper data on \`test-run-started\` event 1`] = `
[
  [
    "suite:start",
    {
      "cid": "0-1",
      "description": "  As a user of WebdriverIO
  I should be able to use different commands
  to get informations about elements on the page",
      "file": "/some/path/to/features/my-feature.feature",
      "keyword": "Feature",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "id": "9",
          "location": {
            "column": 1,
            "line": 1,
          },
          "name": "@feature-tag1",
        },
        {
          "id": "10",
          "location": {
            "column": 1,
            "line": 2,
          },
          "name": "@feature-tag2",
        },
      ],
      "title": "Example feature",
      "type": "feature",
      "uid": "my-feature.feature:undefined:1",
    },
  ],
]
`;

exports[`cucumber reporter > emits messages for certain cucumber events when executed in scenarioLeverReporter > should send proper data on onTestRunFinished 1`] = `
[
  [
    "suite:end",
    {
      "cid": "0-1",
      "duration": NaN,
      "file": "/some/path/to/features/my-feature.feature",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "id": "9",
          "location": {
            "column": 1,
            "line": 1,
          },
          "name": "@feature-tag1",
        },
        {
          "id": "10",
          "location": {
            "column": 1,
            "line": 2,
          },
          "name": "@feature-tag2",
        },
      ],
      "title": "Example feature",
      "type": "feature",
      "uid": "my-feature.feature:undefined:1",
    },
  ],
]
`;

exports[`cucumber reporter > tags in title > should add tags on handleBeforeFeatureEvent 1`] = `
[
  [
    "suite:start",
    {
      "cid": "0-1",
      "description": "  As a user of WebdriverIO
  I should be able to use different commands
  to get informations about elements on the page",
      "file": "/some/path/to/features/my-feature.feature",
      "keyword": "Feature",
      "specs": [
        "/foobar.js",
      ],
      "tags": [
        {
          "id": "9",
          "location": {
            "column": 1,
            "line": 1,
          },
          "name": "@feature-tag1",
        },
        {
          "id": "10",
          "location": {
            "column": 1,
            "line": 2,
          },
          "name": "@feature-tag2",
        },
      ],
      "title": "@feature-tag1, @feature-tag2: Example feature",
      "type": "feature",
      "uid": "my-feature.feature:undefined:1",
    },
  ],
]
`;
