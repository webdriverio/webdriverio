{
  "/session/:sessionId/autoreport": {
    "GET": {
      "command": "isAutoReporting",
      "description": "Whether it should automatically raises errors on browser logs.",
      "ref": "https://codereview.chromium.org/101203012",
      "parameters": [],
      "returns": {
        "type": "Boolean",
        "name": "isAutoReporting",
        "description": "`true` or `false` based on whether auto reporting is enabled."
      }
    },
    "POST": {
      "command": "setAutoReporting",
      "description": "Toggle whether to return response with unknown error with first browser error (e.g. failed to load resource due to 403/404 response) for all subsequent commands (once enabled).",
      "ref": "https://codereview.chromium.org/101203012",
      "examples": [
        [
          "// Enable auto reporting first thing after session was initiated with empty browser logs",
          "console.log(await browser.setAutoReporting(true)); // outputs: null",
          "// Upon requesting an non-existing resource it will abort execution due to thrown unknown error",
          "await browser.url('https://webdriver.io/img/404-does-not-exist.png');"
        ],
        [
          "// During the session do some operations which populate the browser logs",
          "await browser.url('https://webdriver.io/img/404-does-not-exist.png');",
          "await browser.url('https://webdriver.io/403/no-access');",
          "// Enable auto reporting which throws an unknown error for first browser log (404 response)",
          "await browser.setAutoReporting(true);"
        ]

      ],
      "parameters": [{
        "name": "enabled",
        "type": "boolean",
        "description": "`true` if auto reporting should be enabled, use `false` to disable previously enabled auto reporting.",
        "required": true
      }],
      "returns": {
        "type": "Object|Null",
        "name": "firstBrowserError",
        "description": "In case first browser error already occured prior to executing this command it will throw unknown error as response, which is an object with 'message' key describing first browser error. Otherwise it returns `null` on success."
      }
    }
  },
  "/session/:sessionId/is_loading": {
    "GET": {
      "command": "isLoading",
      "description": "Determines load status for active window handle.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/session_commands.cc#L783-L802",
      "examples": [
        [
          "console.log(await browser.isLoading()); // outputs: false",
          "await browser.newWindow('https://webdriver.io');",
          "console.log(await browser.isLoading()); // outputs: true"
        ]
      ],
      "parameters": [],
      "returns": {
        "type": "Boolean",
        "name": "isLoading",
        "description": "`true` or `false` based on whether active window handle is loading or not."
      }
    }
  },
  "/session/:sessionId/chromium/heap_snapshot": {
    "GET": {
      "command": "takeHeapSnapshot",
      "description": "Takes a heap snapshot of the current execution context.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/chrome/web_view.h#L198-L202",
      "parameters": [],
      "returns": {
        "type": "Object",
        "name": "heapSnapshot",
        "description": "A JSON representation of the heap snapshot. Which can be inspected by loading as file into Chrome DevTools."
      }
    }
  },
  "/session/:sessionId/network_connection": {
    "GET": {
      "command": "getNetworkConnection",
      "description": "Get the current network connection.",
      "ref": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes",
      "parameters": []
    },
    "POST": {
      "command": "setNetworkConnection",
      "description": "Set network connection.",
      "ref": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes",
      "parameters": [{
        "name": "connection_type",
        "type": "string",
        "description": "undocumented parameter",
        "required": true
      }]
    }
  },
  "/session/:sessionId/chromium/network_conditions": {
    "GET": {
      "command": "getNetworkConditions",
      "description": "",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/session_commands.cc#L839-L859",
      "parameters": []
    },
    "POST": {
      "command": "setNetworkConditions",
      "description": "",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/window_commands.cc#L1663-L1722",
      "parameters": [{
        "name": "network_name",
        "type": "string",
        "description": "undocumented parameter",
        "required": true
      }]
    },
    "DELETE": {
      "command": "deleteNetworkConditions",
      "description": "",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/window_commands.cc#L1724-L1745",
      "parameters": []
    }
  },
  "/session/:sessionId/chromium/send_command": {
    "POST": {
      "command": "sendCommand",
      "description": "Send Chrome DevTools Protocol command to the browser.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/window_commands.cc#L1290-L1304",
      "parameters": [{
        "name": "cmd",
        "type": "string",
        "description": "name of the command (e.g. Network.enable)",
        "required": true
      }, {
        "name": "params",
        "type": "object",
        "description": "parameters to the command",
        "required": true
      }]
    }
  },
  "/session/:sessionId/chromium/send_command_and_get_result": {
    "POST": {
      "command": "sendCommandAndGetResult",
      "description": "Send Chrome DevTools Protocol command to the browser and wait for receiving result.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/window_commands.cc#L1306-L1320",
      "parameters": [{
        "name": "cmd",
        "type": "string",
        "description": "name of the command (e.g. Network.enable)",
        "required": true
      }, {
        "name": "params",
        "type": "object",
        "description": "parameters to the command",
        "required": true
      }]
    }
  },
  "/session/:sessionId/reporting/generate_test_report": {
    "POST": {
      "command": "generateTestReport",
      "description": "",
      "ref": "https://w3c.github.io/reporting/#generate-test-report-command",
      "parameters": []
    }
  },
  "/session/:sessionId/file": {
    "POST": {
      "command": "uploadFile",
      "description": "Upload a file to remote machine on which the browser is running.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/session_commands.cc#L1037-L1065",
      "parameters": [{
        "name": "file",
        "type": "string",
        "description": "base64 encoded file",
        "required": true
      }]
    }
  },
  "/session/:sessionId/chromium/launch_app": {
    "POST": {
      "command": "launchApp",
      "description": "Launch chrome app.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/session_commands.cc#L521-L539",
      "parameters": [{
        "name": "id",
        "type": "string",
        "description": "id of app to be launched",
        "required": true
      }]
    }
  },
  "/session/:sessionId/element/:elementId/hover": {
    "POST": {
      "command": "elementHover",
      "description": "Enable hover state for an element, which is reset upon next interaction.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/element_commands.cc#L126-L146",
      "variables": [{
        "name": "elementId",
        "description": "id of element to hover over to"
      }],
      "parameters": []
    }
  },
  "/session/:sessionId/touch/pinch": {
    "POST": {
      "command": "touchPinch",
      "description": "Trigger a pinch zoom effect.",
      "ref": "https://github.com/bayandin/chromedriver/blob/2.45/window_commands.cc#L813-L827",
      "parameters": [{
        "name": "x",
        "type": "number",
        "description": "x position to pinch on",
        "required": true
      }, {
        "name": "y",
        "type": "number",
        "description": "y position to pinch on",
        "required": true
      }, {
        "name": "scale",
        "type": "number",
        "description": "pinch zoom scale",
        "required": true
      }]
    }
  }
}
